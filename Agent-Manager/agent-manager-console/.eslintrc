{
  "extends": [
    "plugin:@typescript-eslint/recommended",
    // 用于关闭 ESLint 相关的格式规则集，具体可查看 https://github.com/prettier/eslint-config-prettier/blob/master/index.js
    "prettier",
    // 用于关闭 @typescript-eslint/eslint-plugin 插件相关的格式规则集，具体可查看 https://github.com/prettier/eslint-config-prettier/blob/master/%40typescript-eslint.js
    "prettier/@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "parserOptions": {
    "ecmaFeatures": {
      "generators": true,
      "classes": true
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "mocha": true,
    "jest": true
  },
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",

    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error", "stroustrup", { "allowSingleLine": true }],

    "@typescript-eslint/naming-convention": [
        "error",
        { "selector": "typeLike", "format": ["PascalCase"], "filter": { "regex": "^(__String|[A-Za-z]+_[A-Za-z]+)$", "match": false } },
        { "selector": "interface", "format": ["PascalCase"], "custom": { "regex": "^I[A-Z]", "match": false }, "filter": { "regex": "^I(Arguments|TextWriter|O([A-Z][a-z]+[A-Za-z]*)?)$", "match": false } },
        { "selector": "variable", "format": ["camelCase", "PascalCase", "UPPER_CASE"], "leadingUnderscore": "allow", "filter": { "regex": "^(_{1,2}filename|_{1,2}dirname|_+|[A-Za-z]+_[A-Za-z]+)$", "match": false } },
        { "selector": "function", "format": ["camelCase", "PascalCase"], "leadingUnderscore": "allow", "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false } },
        { "selector": "parameter", "format": ["camelCase"], "leadingUnderscore": "allow", "filter": { "regex": "^(_+|[A-Za-z]+_[A-Z][a-z]+)$", "match": false } },
        { "selector": "method", "format": ["camelCase", "PascalCase"], "leadingUnderscore": "allow", "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false } },
        { "selector": "memberLike", "format": ["camelCase"], "leadingUnderscore": "allow", "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false } },
        { "selector": "enumMember", "format": ["camelCase", "PascalCase"], "leadingUnderscore": "allow", "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false } },
        { "selector": "property", "format": null }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "no-duplicate-imports": "off",

    "@typescript-eslint/no-duplicate-imports": "error",

    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-this-alias": "error",

    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": ["error", { "allowTernary": true }],

    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",

    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "double", { "avoidEscape": true, "allowTemplateLiterals": true }],

    "semi": "off",
    "@typescript-eslint/semi": "error",

    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["error", {
        "asyncArrow": "always",
        "anonymous": "always",
        "named": "never"
    }],

    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/unified-signatures": "error",

    "curly": ["error", "multi-line"],
    "no-console": "error",
    "prettier/prettier": "error",
    "arrow-body-style": 1,
    "function-paren-newline": [
      2,
      "consistent"
    ],
    "newline-per-chained-call": 1,
    "object-curly-newline": 1,
    "operator-linebreak": 1,
    "global-require": 1,
    "max-len": [
      1,
      100,
      2,
      {
        "ignoreUrls": true,
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "no-param-reassign": 1,
    "import/no-unresolved": 0,
    "import/extensions": "ignorePackages",
    "jsx-a11y/anchor-is-valid": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "jsx-a11y/no-noninteractive-element-interactions": 0,
    "react/jsx-first-prop-new-line": 0,
    "react/jsx-max-props-per-line": [
      2,
      {
        "maximum": 3
      }
    ],
    "react/jsx-closing-bracket-location": [
      0,
      "after-props"
    ],
    "react/jsx-no-target-blank": 1,
    "react/forbid-prop-types": 1,
    "react/destructuring-assignment": 1,
    "react/prop-types": 1,
    "react/jsx-one-expression-per-line": 1,
    "react/jsx-wrap-multilines": 0,
    "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }]
  }
}
